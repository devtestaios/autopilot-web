╔══════════════════════════════════════════════════════════════════════╗
║                                                                      ║
║                  🚀 PULSEBRIDGE.AI QUICK REFERENCE 🚀               ║
║                         October 16, 2025                            ║
║                                                                      ║
╚══════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────┐
│ 🎯 ONE-COMMAND SETUP                                                 │
├──────────────────────────────────────────────────────────────────────┤
│  cd autopilot-web && ./setup-all.sh --start                         │
│                                                                      │
│  ✅ Installs all dependencies (frontend + backend)                  │
│  ✅ Starts both services automatically                              │
│  ✅ Opens frontend at http://localhost:3000                         │
│  ✅ Starts backend API at http://localhost:8000                     │
└──────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────┐
│ 🔥 QUICK START (Manual)                                              │
├──────────────────────────────────────────────────────────────────────┤
│  Backend (Terminal 1):                                               │
│    cd autopilot-web/backend                                          │
│    source .venv/bin/activate                                         │
│    uvicorn main:app --reload --port 8000                             │
│                                                                      │
│  Frontend (Terminal 2):                                              │
│    cd autopilot-web                                                  │
│    npm run dev --turbopack                                           │
└──────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────┐
│ 🔧 ESSENTIAL COMMANDS                                                 │
├──────────────────────────────────────────────────────────────────────┤
│  Development:                                                        │
│    npm run dev --turbopack         # Start Next.js dev server       │
│    npm run build --turbopack       # Production build               │
│    npm run test                    # Run Jest tests                 │
│    npm run test:e2e                # Run Playwright E2E tests       │
│    npm run test:all                # Full test suite                │
│                                                                      │
│  Backend:                                                            │
│    ./setup-backend.sh              # Install dependencies           │
│    uvicorn main:app --reload       # Start with auto-reload         │
│    python3 test_imports.py         # Verify dependencies            │
└──────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────┐
│ ✅ RECENT FIXES (Oct 16, 2025)                                       │
├──────────────────────────────────────────────────────────────────────┤
│  1. psycopg2-binary dependency      ✅ FIXED                         │
│     - Corrupted line in requirements.txt resolved                   │
│     - Backend can now connect to PostgreSQL/Supabase                │
│                                                                      │
│  2. Claude Sonnet 4.5 enabled       ✅ NEW FEATURE                   │
│     - Set NEXT_PUBLIC_ENABLE_CLAUDE_SONNET_45=true                  │
│     - Preferred AI provider for all clients                         │
│                                                                      │
│  3. Setup scripts created           ✅ NEW AUTOMATION                │
│     - ./setup-all.sh (complete setup)                               │
│     - ./setup-frontend.sh (frontend only)                           │
│     - ./setup-backend.sh (backend only)                             │
└──────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────┐
│ 🌐 ACCESS URLS                                                        │
├──────────────────────────────────────────────────────────────────────┤
│  Frontend:      http://localhost:3000                                │
│  Backend API:   http://localhost:8000                                │
│  API Docs:      http://localhost:8000/docs                           │
│  Health Check:  http://localhost:8000/health                         │
│  Production:    https://pulsebridge.ai                               │
└──────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────┐
│ ⚙️  ENVIRONMENT CONFIGURATION                                         │
├──────────────────────────────────────────────────────────────────────┤
│  Frontend (.env.local):                                              │
│    NEXT_PUBLIC_API_URL=http://localhost:8000                         │
│    NEXT_PUBLIC_ENABLE_CLAUDE_SONNET_45=true   ⭐ NEW                │
│    NEXT_PUBLIC_SUPABASE_URL=https://...                              │
│    ANTHROPIC_API_KEY=sk-ant-...                                      │
│                                                                      │
│  Backend (backend/.env):                                             │
│    DATABASE_URL=postgresql://...                                     │
│    SUPABASE_URL=https://...                                          │
│    ANTHROPIC_API_KEY=sk-ant-...                                      │
│                                                                      │
│  Copy .env.example → .env.local and fill in your keys               │
└──────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────┐
│ 🧪 TESTING                                                            │
├──────────────────────────────────────────────────────────────────────┤
│  npm run test              # Jest unit tests                         │
│  npm run test:watch        # Watch mode                              │
│  npm run test:e2e          # Playwright (5 browsers)                 │
│  npm run test:e2e:ui       # Interactive E2E UI                      │
│  npm run test:all          # Complete test suite                     │
│                                                                      │
│  Target: 100% E2E pass rate across all browsers                     │
└──────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────┐
│ 🚨 TROUBLESHOOTING                                                    │
├──────────────────────────────────────────────────────────────────────┤
│  Backend won't start:                                                │
│    cd backend && source .venv/bin/activate                           │
│    pip install --force-reinstall -r requirements.txt                 │
│    python3 -c "import psycopg2; print('OK')"                         │
│                                                                      │
│  Frontend build fails:                                               │
│    rm -rf .next node_modules                                         │
│    npm install                                                       │
│    npm run build --turbopack                                         │
│                                                                      │
│  Database connection error:                                          │
│    Check .env files exist and have correct values                   │
│    Verify SUPABASE_URL and DATABASE_URL                              │
└──────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────┐
│ 📚 DOCUMENTATION                                                      │
├──────────────────────────────────────────────────────────────────────┤
│  SETUP_COMPLETE.md         # Comprehensive setup guide              │
│  FIXES_SUMMARY.md          # Recent fixes and changes               │
│  backend/README.md         # Backend quick reference                │
│  .github/copilot-instructions.md  # Project architecture            │
│  API_TESTING_REPORT.md     # API testing results                    │
└──────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────┐
│ 🎯 KEY PROJECT INFO                                                   │
├──────────────────────────────────────────────────────────────────────┤
│  Frontend:    Next.js 15.5.2 + React 19.1.0 + Turbopack             │
│  Backend:     FastAPI + Python 3.11+ + Uvicorn                      │
│  Database:    Supabase (PostgreSQL 14+) - 64 tables                 │
│  AI:          Claude Sonnet 4.5 (Anthropic) + GPT-4 (OpenAI)        │
│  Testing:     Jest + Playwright (5 browsers)                         │
│  Routes:      115+ frontend routes in 8 route groups                │
│  Endpoints:   60+ backend API endpoints                              │
│  Integrations: Google Ads, Meta, LinkedIn, Pinterest APIs           │
└──────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────┐
│ 💡 PRO TIPS                                                           │
├──────────────────────────────────────────────────────────────────────┤
│  • Always use --turbopack flag (5x faster builds)                   │
│  • Keep backend venv activated while developing                     │
│  • Run tests before each deployment (npm run test:all)              │
│  • Never commit .env files to git                                   │
│  • Use setup scripts for clean installations                        │
│  • Check Render logs for backend deployment issues                  │
│  • Monitor Supabase dashboard for database health                   │
└──────────────────────────────────────────────────────────────────────┘

╔══════════════════════════════════════════════════════════════════════╗
║  Status: ✅ All systems operational                                  ║
║  Updated: October 16, 2025                                           ║
║  Ready for: Development → Staging → Production                       ║
╚══════════════════════════════════════════════════════════════════════╝
